!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Box	include/common.h	/^typedef struct box Box;$/;"	t	typeref:struct:box
COMMON_H	include/common.h	/^#define COMMON_H$/;"	d
DEBUG_MACROS_H	include/debugMacros.h	/^#define DEBUG_MACROS_H$/;"	d
DIMENSION	include/common.h	/^#define DIMENSION /;"	d
Fibre	include/common.h	/^typedef struct fibre Fibre;$/;"	t	typeref:struct:fibre
MAX_LENGTH	include/common.h	/^#define MAX_LENGTH /;"	d
MIN_UNIT_MACROS_H	include/minUnitMacros.h	/^#define MIN_UNIT_MACROS_H$/;"	d
NETWORK_ANALYSIS_H	include/networkAnalysis.h	/^#define NETWORK_ANALYSIS_H$/;"	d
NETWORK_READ_H	include/networkRead.h	/^#define NETWORK_READ_H$/;"	d
NETWORK_WRITE_H	include/networkWrite.h	/^#define NETWORK_WRITE_H$/;"	d
NODE_BOUNDARY	include/common.h	/^#define NODE_BOUNDARY /;"	d
NODE_DANGLING	include/common.h	/^#define NODE_DANGLING /;"	d
NODE_INTERNAL	include/common.h	/^#define NODE_INTERNAL /;"	d
Node	include/common.h	/^typedef struct node Node;$/;"	t	typeref:struct:node
PARAMETERS	include/common.h	/^#define PARAMETERS /;"	d
Parameters	include/common.h	/^typedef struct parameters Parameters;$/;"	t	typeref:struct:parameters
SPAN	include/common.h	/^#define SPAN /;"	d
SYMTEST	include/common.h	/^#define SYMTEST /;"	d
SYMTOL	include/common.h	/^#define SYMTOL /;"	d
SYSTEM_ASSEMBLY_H	include/systemAssembly.h	/^#define SYSTEM_ASSEMBLY_H$/;"	d
SYSTEM_SOLVE_H	include/systemSolve.h	/^#define SYSTEM_SOLVE_H$/;"	d
Sparse	include/common.h	/^typedef struct sparseMat Sparse;$/;"	t	typeref:struct:sparseMat
associatedFibreCount	include/common.h	/^	int associatedFibreCount;	\/\/ unused$/;"	m	struct:node
associatedFibreIDs	include/common.h	/^	int *associatedFibreIDs;	\/\/ unused$/;"	m	struct:node
associatedNodeCount	include/common.h	/^	int associatedNodeCount;	\/\/ unused$/;"	m	struct:node
associatedNodeIDs	include/common.h	/^	int *associatedNodeIDs;		\/\/ unused$/;"	m	struct:node
box	include/common.h	/^struct box {$/;"	s
check	include/debugMacros.h	/^#define check(/;"	d
check_debug	include/debugMacros.h	/^#define check_debug(/;"	d
check_mem	include/debugMacros.h	/^#define check_mem(/;"	d
clean_errno	include/debugMacros.h	/^#define clean_errno(/;"	d
col	include/common.h	/^	int *col;     \/\/ (0<nz)  column index$/;"	m	struct:sparseMat
counter	include/common.h	/^	int *counter; \/\/ (0<n)   counters$/;"	m	struct:sparseMat
debug	include/debugMacros.h	/^#define debug(/;"	d
fibre	include/common.h	/^struct fibre {$/;"	s
fibreCount	include/common.h	/^	int fibreCount;$/;"	m	struct:box
fibreID	include/common.h	/^	int fibreID;$/;"	m	struct:fibre
gamma	include/common.h	/^	double gamma;$/;"	m	struct:parameters
globalID	include/common.h	/^	int globalID;$/;"	m	struct:node
help	src/main.c	/^static char help[] = "The first draft of the PETSc model.\\n\\n";$/;"	v	file:
log_err	include/debugMacros.h	/^#define log_err(/;"	d
log_info	include/debugMacros.h	/^#define log_info(/;"	d
log_warn	include/debugMacros.h	/^#define log_warn(/;"	d
main	src/main.c	/^int main(int argc, char **args)$/;"	f
masterFibreList	include/common.h	/^	Fibre *masterFibreList;$/;"	m	struct:box
masterNodeList	include/common.h	/^	Node *masterNodeList;$/;"	m	struct:box
mat	include/common.h	/^	double *mat;  \/\/ (0<nz)  matrix entry$/;"	m	struct:sparseMat
mu_assert	include/minUnitMacros.h	/^#define mu_assert(/;"	d
mu_run_test	include/minUnitMacros.h	/^#define mu_run_test(/;"	d
n	include/common.h	/^	int n;$/;"	m	struct:sparseMat
networkAnalysis	src/networkAnalysis.c	/^int networkAnalysis()$/;"	f
networkRead	src/networkRead.c	/^int networkRead()$/;"	f
networkWrite	src/networkWrite.c	/^int networkWrite()$/;"	f
node	include/common.h	/^struct node {$/;"	s
nodeCount	include/common.h	/^	int nodeCount;$/;"	m	struct:box
nodeID	include/common.h	/^	int nodeID;$/;"	m	struct:node
nodeInternalCount	include/common.h	/^	int nodeInternalCount;$/;"	m	struct:box
nodeType	include/common.h	/^	int nodeType;				\/\/ might want to link back later$/;"	m	struct:node
nodesOnFibre	include/common.h	/^	int nodesOnFibre;$/;"	m	struct:fibre
nodesOnFibreList	include/common.h	/^	Node **nodesOnFibreList;$/;"	m	struct:fibre
nz	include/common.h	/^	int nz;$/;"	m	struct:sparseMat
parameters	include/common.h	/^struct parameters {$/;"	s
radius	include/common.h	/^	double radius;$/;"	m	struct:fibre
rowp	include/common.h	/^	int *rowp;    \/\/ (0<n+1) row pointers$/;"	m	struct:sparseMat
sentinel	include/debugMacros.h	/^#define sentinel(/;"	d
sparseMat	include/common.h	/^struct sparseMat {$/;"	s
systemAssembly	src/systemAssembly.c	/^int systemAssembly()$/;"	f
systemSolve	src/systemSolve.c	/^int systemSolve()$/;"	f
xyzCoord	include/common.h	/^	double xyzCoord[3];$/;"	m	struct:node
xyzDimension	include/common.h	/^	double xyzDimension[3];$/;"	m	struct:box
xyzDisplacement	include/common.h	/^	double xyzDisplacement[3];$/;"	m	struct:node
xyzPeriodic	include/common.h	/^	int xyzPeriodic[3];$/;"	m	struct:box
youngsModulus	include/common.h	/^	double youngsModulus;$/;"	m	struct:parameters
